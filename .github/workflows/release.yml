
on:
  release:
    types: [created]

# on:
#   push:
#     branches:
#       - master

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on:  macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-stable-cargo-registry-
      - name: Cache Cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-stable-cargo-index-
      - name: Cache Cargo build debug
        uses: actions/cache@v1
        with:
          path: target/debug
          key: ${{ runner.os }}-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-stable-debug-target-
      - name: Cache Cargo build release
        uses: actions/cache@v1
        with:
          path: target/release
          key: ${{ runner.os }}-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-stable-debug-target-
      - name: Build project
        run: cargo build --release --locked
#       - name: Bump version and push tag/create release point
#         uses: anothrNick/github-tag-action@1.17.2
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           WITH_V: true
#         id: bump_version
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/rusty_pipe_cli
          asset_name: rusty_pipe_mac
          tag: ${{ steps.vars.outputs.tag  }}
          overwrite: true
