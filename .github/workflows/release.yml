
on:
  release:
    types: [created]

# on:
#   push:
#     branches:
#       - master

jobs:
  mac_x86_64:
    name: release-mac_x86_64
    runs-on:  macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-release-mac_x86_64-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-release-mac_x86_64-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build debug
        uses: actions/cache@v2
        with:
          path: target/debug
          key: ${{ runner.os }}-release-mac_x86_64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build release
        uses: actions/cache@v2
        with:
          path: target/release
          key: ${{ runner.os }}-release-mac_x86_64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build project
        run: cargo build --release --locked
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/rusty_pipe_cli
          asset_name: rusty_pipe_mac
          tag: ${{ steps.vars.outputs.tag  }}
          overwrite: true
  linux_x86_64:
    name: release-linux_x86_64
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install alsa
        run: sudo apt-get install libasound2-dev
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-release-ubuntu_x86_64-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-release-ubuntu_x86_64-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build debug
        uses: actions/cache@v2
        with:
          path: target/debug
          key: ${{ runner.os }}-release-ubuntu_x86_64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build release
        uses: actions/cache@v2
        with:
          path: target/release
          key: ${{ runner.os }}-release-ubuntu_x86_64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build project
        run: cargo build --release --locked
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/rusty_pipe_cli
          asset_name: rusty_pipe_linux.x86_64
          tag: ${{ steps.vars.outputs.tag  }}
          overwrite: true
  windowx_86_64:
    name: release-windowx_86_64
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install windows target
        run: rustup target add x86_64-pc-windows-gnu
      - name: Install windows toolchain
        run: rustup toolchain install stable-x86_64-pc-windows-gnu
      - name: Install gcc-mingw
        run: sudo apt install gcc-mingw-w64
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-release-windowx_86_64-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-release-windowx_86_64-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build debug
        uses: actions/cache@v2
        with:
          path: target/x86_64-pc-windows-gnu/debug
          key: ${{ runner.os }}-release-windowx_86_64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build release
        uses: actions/cache@v2
        with:
          path: target/x86_64-pc-windows-gnu/release
          key: ${{ runner.os }}-release-windowx_86_64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build project
        run: cargo build --target x86_64-pc-windows-gnu --release --locked
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-pc-windows-gnu/release/rusty_pipe_cli.exe
          asset_name: rusty_pipe_windows_x86_64.exe
          tag: ${{ steps.vars.outputs.tag  }}
          overwrite: true
  windowx_86_64-msvc:
    name: release-windowx_86_64-windows
    runs-on:  windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-release-windowx_86_64-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-release-windowx_86_64-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build debug
        uses: actions/cache@v2
        with:
          path: target/x86_64-pc-windows-gnu/debug
          key: ${{ runner.os }}-release-windowx_86_64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build release
        uses: actions/cache@v2
        with:
          path: target/x86_64-pc-windows-gnu/release
          key: ${{ runner.os }}-release-windowx_86_64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Build project
        run: cargo build --release --locked
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/rusty_pipe_cli.exe
          asset_name: rusty_pipe_windows-msvc_x86_64.exe
          tag: ${{ steps.vars.outputs.tag  }}
          overwrite: true
  mac_aarch64:
    name: release-macos_aarch64
    runs-on:  macos-11
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install aarach target
        run: rustup target install aarch64-apple-darwin
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-release-macos_aarch64-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-release-macos_aarch64-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build debug
        uses: actions/cache@v2
        with:
          path: target/aarch64-apple-darwin/debug
          key: ${{ runner.os }}-release-macos_aarch64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo build release
        uses: actions/cache@v2
        with:
          path: target/aarch64-apple-darwin/release
          key: ${{ runner.os }}-release-macos_aarch64-stable-debug-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build project
        run: SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path) MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version) cargo build --release --locked --target aarch64-apple-darwin
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/aarch64-apple-darwin/release/rusty_pipe_cli
          asset_name: rusty_pipe_macos_aarach64
          tag: ${{ steps.vars.outputs.tag  }}
          overwrite: true
